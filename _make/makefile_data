# silent echo calls
# MAKEFLAGS += --silent
# instead silencing individual calls with '@'


# compiler plus flags, -g: debug info, -Wall: all warnings
#  -fcommon: ignore duplicate variable definitions
# CC         = @gcc -g -Wall	-DASSETM_NO_ZIP -DDEBUG_TIMER -DDEBUG_DRAW -DPHYS_DEBUG -DEDITOR -DINCLUDE_PLAY_MODE
CC         = @gcc -g -Wall	
CC_NO_WARN = @gcc

LIB_DIR = ..\_libs\win64

# NAME = lib_mooh_core.a
OUT  = $(LIB_DIR)\$(NAME)

SRC_DIR   	= ../src
APPS_DIR		= ../apps
DATA_DIR  	= $(SRC_DIR)/data


EXTERNAL_DIR = ../_external

OBJ_DIR = ..\_build\$(BIN_DIR)

# external: ufbx, zip
_OBJS += 				 			\
	entity_template.o   \
	shader_template.o   \
	material_template.o \
	test_comp.o


# put the OBJ_DIR in front of the obj names
OBJS = $(patsubst %,$(OBJ_DIR)/%,$(_OBJS))
OBJS_WIN = $(patsubst %,$(OBJ_DIR)\\%,$(_OBJS))

_INC = 							  				\
		$(EXTERNAL_DIR)	  				\
		$(SRC_DIR)								\
		$(DATA_DIR)								
INC = $(patsubst %,-I %,$(_INC))

LIB_LINK = $(INC) -L $(LIB_DIR) $(LIBS) 


all: $(NAME)
	@echo bin dir:  $(BIN_DIR)
	@echo lib name: $(NAME)
	@echo gcc args: $(CC_ARGS)
	@echo ---- compiled $(NAME) 

# compile all object files to .exe
$(NAME): $(OBJS) 
	@ar -crs $(OUT) $(OBJS)  


# compile all .c files to .o files
$(OBJ_DIR)/%.o: $(DATA_DIR)/%.c
	@echo $< -> $@	
	$(CC) $(CC_ARGS) -c $< -o $@ $(INC)


# prevents make from fideling with files named clean
.PHONY: clean

clean:
	@del $(OUT)
	@del $(OBJS_WIN) 
	@echo ---- clean $(NAME)  

# clean and them make all
cleanm: clean all





